
rcc_project_ieee.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f8  080002f8  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f8  080002f8  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  080002f8  080002f8  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f8  080002f8  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  080002f8  080002f8  000102f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000300  08000300  00010300  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000304  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001b4  20000004  08000308  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001b8  08000308  000201b8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002002d  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000b8  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000059  00000000  00000000  00020128  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00020188  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000004f2  00000000  00000000  000201fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004f0  00000000  00000000  000206ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004008  00000000  00000000  00020bde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000001e8  00000000  00000000  00024be8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000049  00000000  00000000  00024dd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000004 	.word	0x20000004
 800014c:	00000000 	.word	0x00000000
 8000150:	080002e0 	.word	0x080002e0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000008 	.word	0x20000008
 800016c:	080002e0 	.word	0x080002e0

08000170 <main>:

#include <stdint.h>
#include "main.h"
#include "RCC_interface.h"
int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	/* Loop forever */
	for(;;);
 8000174:	e7fe      	b.n	8000174 <main+0x4>
	...

08000178 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000178:	480d      	ldr	r0, [pc, #52]	; (80001b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800017a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800017c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000180:	480c      	ldr	r0, [pc, #48]	; (80001b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000182:	490d      	ldr	r1, [pc, #52]	; (80001b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000184:	4a0d      	ldr	r2, [pc, #52]	; (80001bc <LoopForever+0xe>)
  movs r3, #0
 8000186:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000188:	e002      	b.n	8000190 <LoopCopyDataInit>

0800018a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800018a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800018c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800018e:	3304      	adds	r3, #4

08000190 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000190:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000192:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000194:	d3f9      	bcc.n	800018a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000196:	4a0a      	ldr	r2, [pc, #40]	; (80001c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000198:	4c0a      	ldr	r4, [pc, #40]	; (80001c4 <LoopForever+0x16>)
  movs r3, #0
 800019a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800019c:	e001      	b.n	80001a2 <LoopFillZerobss>

0800019e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800019e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001a0:	3204      	adds	r2, #4

080001a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001a4:	d3fb      	bcc.n	800019e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001a6:	f000 f811 	bl	80001cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001aa:	f7ff ffe1 	bl	8000170 <main>

080001ae <LoopForever>:

LoopForever:
  b LoopForever
 80001ae:	e7fe      	b.n	80001ae <LoopForever>
  ldr   r0, =_estack
 80001b0:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80001b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001b8:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80001bc:	08000304 	.word	0x08000304
  ldr r2, =_sbss
 80001c0:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80001c4:	200001b8 	.word	0x200001b8

080001c8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001c8:	e7fe      	b.n	80001c8 <ADC1_2_IRQHandler>
	...

080001cc <__libc_init_array>:
 80001cc:	b570      	push	{r4, r5, r6, lr}
 80001ce:	2600      	movs	r6, #0
 80001d0:	4d0c      	ldr	r5, [pc, #48]	; (8000204 <__libc_init_array+0x38>)
 80001d2:	4c0d      	ldr	r4, [pc, #52]	; (8000208 <__libc_init_array+0x3c>)
 80001d4:	1b64      	subs	r4, r4, r5
 80001d6:	10a4      	asrs	r4, r4, #2
 80001d8:	42a6      	cmp	r6, r4
 80001da:	d109      	bne.n	80001f0 <__libc_init_array+0x24>
 80001dc:	f000 f880 	bl	80002e0 <_init>
 80001e0:	2600      	movs	r6, #0
 80001e2:	4d0a      	ldr	r5, [pc, #40]	; (800020c <__libc_init_array+0x40>)
 80001e4:	4c0a      	ldr	r4, [pc, #40]	; (8000210 <__libc_init_array+0x44>)
 80001e6:	1b64      	subs	r4, r4, r5
 80001e8:	10a4      	asrs	r4, r4, #2
 80001ea:	42a6      	cmp	r6, r4
 80001ec:	d105      	bne.n	80001fa <__libc_init_array+0x2e>
 80001ee:	bd70      	pop	{r4, r5, r6, pc}
 80001f0:	f855 3b04 	ldr.w	r3, [r5], #4
 80001f4:	4798      	blx	r3
 80001f6:	3601      	adds	r6, #1
 80001f8:	e7ee      	b.n	80001d8 <__libc_init_array+0xc>
 80001fa:	f855 3b04 	ldr.w	r3, [r5], #4
 80001fe:	4798      	blx	r3
 8000200:	3601      	adds	r6, #1
 8000202:	e7f2      	b.n	80001ea <__libc_init_array+0x1e>
 8000204:	080002f8 	.word	0x080002f8
 8000208:	080002f8 	.word	0x080002f8
 800020c:	080002f8 	.word	0x080002f8
 8000210:	08000300 	.word	0x08000300

08000214 <__retarget_lock_acquire_recursive>:
 8000214:	4770      	bx	lr

08000216 <__retarget_lock_release_recursive>:
 8000216:	4770      	bx	lr

08000218 <register_fini>:
 8000218:	4b02      	ldr	r3, [pc, #8]	; (8000224 <register_fini+0xc>)
 800021a:	b113      	cbz	r3, 8000222 <register_fini+0xa>
 800021c:	4802      	ldr	r0, [pc, #8]	; (8000228 <register_fini+0x10>)
 800021e:	f000 b805 	b.w	800022c <atexit>
 8000222:	4770      	bx	lr
 8000224:	00000000 	.word	0x00000000
 8000228:	08000239 	.word	0x08000239

0800022c <atexit>:
 800022c:	2300      	movs	r3, #0
 800022e:	4601      	mov	r1, r0
 8000230:	461a      	mov	r2, r3
 8000232:	4618      	mov	r0, r3
 8000234:	f000 b814 	b.w	8000260 <__register_exitproc>

08000238 <__libc_fini_array>:
 8000238:	b538      	push	{r3, r4, r5, lr}
 800023a:	4d07      	ldr	r5, [pc, #28]	; (8000258 <__libc_fini_array+0x20>)
 800023c:	4c07      	ldr	r4, [pc, #28]	; (800025c <__libc_fini_array+0x24>)
 800023e:	1b64      	subs	r4, r4, r5
 8000240:	10a4      	asrs	r4, r4, #2
 8000242:	b91c      	cbnz	r4, 800024c <__libc_fini_array+0x14>
 8000244:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000248:	f000 b850 	b.w	80002ec <_fini>
 800024c:	3c01      	subs	r4, #1
 800024e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8000252:	4798      	blx	r3
 8000254:	e7f5      	b.n	8000242 <__libc_fini_array+0xa>
 8000256:	bf00      	nop
 8000258:	08000300 	.word	0x08000300
 800025c:	08000304 	.word	0x08000304

08000260 <__register_exitproc>:
 8000260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000264:	f8df a06c 	ldr.w	sl, [pc, #108]	; 80002d4 <__register_exitproc+0x74>
 8000268:	4606      	mov	r6, r0
 800026a:	f8da 0000 	ldr.w	r0, [sl]
 800026e:	4698      	mov	r8, r3
 8000270:	460f      	mov	r7, r1
 8000272:	4691      	mov	r9, r2
 8000274:	f7ff ffce 	bl	8000214 <__retarget_lock_acquire_recursive>
 8000278:	4b17      	ldr	r3, [pc, #92]	; (80002d8 <__register_exitproc+0x78>)
 800027a:	681c      	ldr	r4, [r3, #0]
 800027c:	b90c      	cbnz	r4, 8000282 <__register_exitproc+0x22>
 800027e:	4c17      	ldr	r4, [pc, #92]	; (80002dc <__register_exitproc+0x7c>)
 8000280:	601c      	str	r4, [r3, #0]
 8000282:	6865      	ldr	r5, [r4, #4]
 8000284:	f8da 0000 	ldr.w	r0, [sl]
 8000288:	2d1f      	cmp	r5, #31
 800028a:	dd05      	ble.n	8000298 <__register_exitproc+0x38>
 800028c:	f7ff ffc3 	bl	8000216 <__retarget_lock_release_recursive>
 8000290:	f04f 30ff 	mov.w	r0, #4294967295
 8000294:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000298:	b19e      	cbz	r6, 80002c2 <__register_exitproc+0x62>
 800029a:	2201      	movs	r2, #1
 800029c:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 80002a0:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 80002a4:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 80002a8:	40aa      	lsls	r2, r5
 80002aa:	4313      	orrs	r3, r2
 80002ac:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 80002b0:	2e02      	cmp	r6, #2
 80002b2:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 80002b6:	bf02      	ittt	eq
 80002b8:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 80002bc:	4313      	orreq	r3, r2
 80002be:	f8c4 318c 	streq.w	r3, [r4, #396]	; 0x18c
 80002c2:	1c6b      	adds	r3, r5, #1
 80002c4:	3502      	adds	r5, #2
 80002c6:	6063      	str	r3, [r4, #4]
 80002c8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 80002cc:	f7ff ffa3 	bl	8000216 <__retarget_lock_release_recursive>
 80002d0:	2000      	movs	r0, #0
 80002d2:	e7df      	b.n	8000294 <__register_exitproc+0x34>
 80002d4:	20000000 	.word	0x20000000
 80002d8:	20000024 	.word	0x20000024
 80002dc:	20000028 	.word	0x20000028

080002e0 <_init>:
 80002e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e2:	bf00      	nop
 80002e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e6:	bc08      	pop	{r3}
 80002e8:	469e      	mov	lr, r3
 80002ea:	4770      	bx	lr

080002ec <_fini>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr
