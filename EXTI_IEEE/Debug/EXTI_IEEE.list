
EXTI_IEEE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002a8  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003d8  080003e0  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003d8  080003d8  000103e0  2**0
                  CONTENTS
  4 .ARM          00000000  080003d8  080003d8  000103e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003d8  080003e0  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003d8  080003d8  000103d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003dc  080003dc  000103dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000068  20000000  080003e0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000068  080003e0  00020068  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000103e0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010409  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000355  00000000  00000000  0001044c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001ae  00000000  00000000  000107a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  00010950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000081  00000000  00000000  00010a10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000102d  00000000  00000000  00010a91  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000785  00000000  00000000  00011abe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003f2b  00000000  00000000  00012243  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000200  00000000  00000000  00016170  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000042  00000000  00000000  00016370  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080003c0 	.word	0x080003c0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080003c0 	.word	0x080003c0

08000170 <EXTI0_IRQHandler>:
}
/*set callback*/
void EXTI_VoidSetCallbackFunction(uint8_t line_num,void (*ptr)(void)){
	EXTI_line_callbacks[line_num]=ptr;
}
void EXTI0_IRQHandler(){
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	if(EXTI_line_callbacks[0]){
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <EXTI0_IRQHandler+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	2b00      	cmp	r3, #0
 800017a:	d008      	beq.n	800018e <EXTI0_IRQHandler+0x1e>
		EXTI_line_callbacks[0]();
 800017c:	4b05      	ldr	r3, [pc, #20]	; (8000194 <EXTI0_IRQHandler+0x24>)
 800017e:	681b      	ldr	r3, [r3, #0]
 8000180:	4798      	blx	r3
		EXTI->PR |= (1<<0);
 8000182:	4b05      	ldr	r3, [pc, #20]	; (8000198 <EXTI0_IRQHandler+0x28>)
 8000184:	695b      	ldr	r3, [r3, #20]
 8000186:	4a04      	ldr	r2, [pc, #16]	; (8000198 <EXTI0_IRQHandler+0x28>)
 8000188:	f043 0301 	orr.w	r3, r3, #1
 800018c:	6153      	str	r3, [r2, #20]
	}
}
 800018e:	bf00      	nop
 8000190:	bd80      	pop	{r7, pc}
 8000192:	bf00      	nop
 8000194:	2000001c 	.word	0x2000001c
 8000198:	40010400 	.word	0x40010400

0800019c <EXTI1_IRQHandler>:
void EXTI1_IRQHandler(){
 800019c:	b580      	push	{r7, lr}
 800019e:	af00      	add	r7, sp, #0
	if(EXTI_line_callbacks[1]){
 80001a0:	4b07      	ldr	r3, [pc, #28]	; (80001c0 <EXTI1_IRQHandler+0x24>)
 80001a2:	685b      	ldr	r3, [r3, #4]
 80001a4:	2b00      	cmp	r3, #0
 80001a6:	d008      	beq.n	80001ba <EXTI1_IRQHandler+0x1e>
		EXTI_line_callbacks[1]();
 80001a8:	4b05      	ldr	r3, [pc, #20]	; (80001c0 <EXTI1_IRQHandler+0x24>)
 80001aa:	685b      	ldr	r3, [r3, #4]
 80001ac:	4798      	blx	r3
		EXTI->PR |= (1<<1);
 80001ae:	4b05      	ldr	r3, [pc, #20]	; (80001c4 <EXTI1_IRQHandler+0x28>)
 80001b0:	695b      	ldr	r3, [r3, #20]
 80001b2:	4a04      	ldr	r2, [pc, #16]	; (80001c4 <EXTI1_IRQHandler+0x28>)
 80001b4:	f043 0302 	orr.w	r3, r3, #2
 80001b8:	6153      	str	r3, [r2, #20]
	}
}
 80001ba:	bf00      	nop
 80001bc:	bd80      	pop	{r7, pc}
 80001be:	bf00      	nop
 80001c0:	2000001c 	.word	0x2000001c
 80001c4:	40010400 	.word	0x40010400

080001c8 <EXTI2_IRQHandler>:
void EXTI2_IRQHandler(){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0
	if(EXTI_line_callbacks[2]){
 80001cc:	4b07      	ldr	r3, [pc, #28]	; (80001ec <EXTI2_IRQHandler+0x24>)
 80001ce:	689b      	ldr	r3, [r3, #8]
 80001d0:	2b00      	cmp	r3, #0
 80001d2:	d008      	beq.n	80001e6 <EXTI2_IRQHandler+0x1e>
		EXTI_line_callbacks[2]();
 80001d4:	4b05      	ldr	r3, [pc, #20]	; (80001ec <EXTI2_IRQHandler+0x24>)
 80001d6:	689b      	ldr	r3, [r3, #8]
 80001d8:	4798      	blx	r3
		EXTI->PR |= (1<<2);
 80001da:	4b05      	ldr	r3, [pc, #20]	; (80001f0 <EXTI2_IRQHandler+0x28>)
 80001dc:	695b      	ldr	r3, [r3, #20]
 80001de:	4a04      	ldr	r2, [pc, #16]	; (80001f0 <EXTI2_IRQHandler+0x28>)
 80001e0:	f043 0304 	orr.w	r3, r3, #4
 80001e4:	6153      	str	r3, [r2, #20]
	}
}
 80001e6:	bf00      	nop
 80001e8:	bd80      	pop	{r7, pc}
 80001ea:	bf00      	nop
 80001ec:	2000001c 	.word	0x2000001c
 80001f0:	40010400 	.word	0x40010400

080001f4 <EXTI3_IRQHandler>:
void EXTI3_IRQHandler(){
 80001f4:	b580      	push	{r7, lr}
 80001f6:	af00      	add	r7, sp, #0
	if(EXTI_line_callbacks[3]){
 80001f8:	4b07      	ldr	r3, [pc, #28]	; (8000218 <EXTI3_IRQHandler+0x24>)
 80001fa:	68db      	ldr	r3, [r3, #12]
 80001fc:	2b00      	cmp	r3, #0
 80001fe:	d008      	beq.n	8000212 <EXTI3_IRQHandler+0x1e>
		EXTI_line_callbacks[3]();
 8000200:	4b05      	ldr	r3, [pc, #20]	; (8000218 <EXTI3_IRQHandler+0x24>)
 8000202:	68db      	ldr	r3, [r3, #12]
 8000204:	4798      	blx	r3
		EXTI->PR |= (1<<3);
 8000206:	4b05      	ldr	r3, [pc, #20]	; (800021c <EXTI3_IRQHandler+0x28>)
 8000208:	695b      	ldr	r3, [r3, #20]
 800020a:	4a04      	ldr	r2, [pc, #16]	; (800021c <EXTI3_IRQHandler+0x28>)
 800020c:	f043 0308 	orr.w	r3, r3, #8
 8000210:	6153      	str	r3, [r2, #20]
	}
}
 8000212:	bf00      	nop
 8000214:	bd80      	pop	{r7, pc}
 8000216:	bf00      	nop
 8000218:	2000001c 	.word	0x2000001c
 800021c:	40010400 	.word	0x40010400

08000220 <EXTI4_IRQHandler>:
void EXTI4_IRQHandler(){
 8000220:	b580      	push	{r7, lr}
 8000222:	af00      	add	r7, sp, #0
	if(EXTI_line_callbacks[4]){
 8000224:	4b07      	ldr	r3, [pc, #28]	; (8000244 <EXTI4_IRQHandler+0x24>)
 8000226:	691b      	ldr	r3, [r3, #16]
 8000228:	2b00      	cmp	r3, #0
 800022a:	d008      	beq.n	800023e <EXTI4_IRQHandler+0x1e>
		EXTI_line_callbacks[4]();
 800022c:	4b05      	ldr	r3, [pc, #20]	; (8000244 <EXTI4_IRQHandler+0x24>)
 800022e:	691b      	ldr	r3, [r3, #16]
 8000230:	4798      	blx	r3
		EXTI->PR |= (1<<4);
 8000232:	4b05      	ldr	r3, [pc, #20]	; (8000248 <EXTI4_IRQHandler+0x28>)
 8000234:	695b      	ldr	r3, [r3, #20]
 8000236:	4a04      	ldr	r2, [pc, #16]	; (8000248 <EXTI4_IRQHandler+0x28>)
 8000238:	f043 0310 	orr.w	r3, r3, #16
 800023c:	6153      	str	r3, [r2, #20]
	}
}
 800023e:	bf00      	nop
 8000240:	bd80      	pop	{r7, pc}
 8000242:	bf00      	nop
 8000244:	2000001c 	.word	0x2000001c
 8000248:	40010400 	.word	0x40010400

0800024c <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(){
 800024c:	b580      	push	{r7, lr}
 800024e:	b082      	sub	sp, #8
 8000250:	af00      	add	r7, sp, #0
	for(int i=5;i<11;i++){
 8000252:	2305      	movs	r3, #5
 8000254:	607b      	str	r3, [r7, #4]
 8000256:	e020      	b.n	800029a <EXTI9_5_IRQHandler+0x4e>
		if( (EXTI->PR) & (1<<i) ){
 8000258:	4b14      	ldr	r3, [pc, #80]	; (80002ac <EXTI9_5_IRQHandler+0x60>)
 800025a:	695b      	ldr	r3, [r3, #20]
 800025c:	2101      	movs	r1, #1
 800025e:	687a      	ldr	r2, [r7, #4]
 8000260:	fa01 f202 	lsl.w	r2, r1, r2
 8000264:	4013      	ands	r3, r2
 8000266:	2b00      	cmp	r3, #0
 8000268:	d014      	beq.n	8000294 <EXTI9_5_IRQHandler+0x48>
			if(EXTI_line_callbacks[i]){
 800026a:	4a11      	ldr	r2, [pc, #68]	; (80002b0 <EXTI9_5_IRQHandler+0x64>)
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000272:	2b00      	cmp	r3, #0
 8000274:	d00e      	beq.n	8000294 <EXTI9_5_IRQHandler+0x48>
				EXTI_line_callbacks[i]();
 8000276:	4a0e      	ldr	r2, [pc, #56]	; (80002b0 <EXTI9_5_IRQHandler+0x64>)
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800027e:	4798      	blx	r3
				EXTI->PR |= (1<<(i));
 8000280:	4b0a      	ldr	r3, [pc, #40]	; (80002ac <EXTI9_5_IRQHandler+0x60>)
 8000282:	695b      	ldr	r3, [r3, #20]
 8000284:	2101      	movs	r1, #1
 8000286:	687a      	ldr	r2, [r7, #4]
 8000288:	fa01 f202 	lsl.w	r2, r1, r2
 800028c:	4611      	mov	r1, r2
 800028e:	4a07      	ldr	r2, [pc, #28]	; (80002ac <EXTI9_5_IRQHandler+0x60>)
 8000290:	430b      	orrs	r3, r1
 8000292:	6153      	str	r3, [r2, #20]
	for(int i=5;i<11;i++){
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	3301      	adds	r3, #1
 8000298:	607b      	str	r3, [r7, #4]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	2b0a      	cmp	r3, #10
 800029e:	dddb      	ble.n	8000258 <EXTI9_5_IRQHandler+0xc>
			}
		}
	}
}
 80002a0:	bf00      	nop
 80002a2:	bf00      	nop
 80002a4:	3708      	adds	r7, #8
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	bf00      	nop
 80002ac:	40010400 	.word	0x40010400
 80002b0:	2000001c 	.word	0x2000001c

080002b4 <EXTI15_10_IRQHandler>:
void EXTI15_10_IRQHandler(){
 80002b4:	b580      	push	{r7, lr}
 80002b6:	b082      	sub	sp, #8
 80002b8:	af00      	add	r7, sp, #0
	for(int i=10;i<16;i++){
 80002ba:	230a      	movs	r3, #10
 80002bc:	607b      	str	r3, [r7, #4]
 80002be:	e020      	b.n	8000302 <EXTI15_10_IRQHandler+0x4e>
		if( (EXTI->PR) & (1<<i) ){
 80002c0:	4b14      	ldr	r3, [pc, #80]	; (8000314 <EXTI15_10_IRQHandler+0x60>)
 80002c2:	695b      	ldr	r3, [r3, #20]
 80002c4:	2101      	movs	r1, #1
 80002c6:	687a      	ldr	r2, [r7, #4]
 80002c8:	fa01 f202 	lsl.w	r2, r1, r2
 80002cc:	4013      	ands	r3, r2
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	d014      	beq.n	80002fc <EXTI15_10_IRQHandler+0x48>
			if(EXTI_line_callbacks[i]){
 80002d2:	4a11      	ldr	r2, [pc, #68]	; (8000318 <EXTI15_10_IRQHandler+0x64>)
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d00e      	beq.n	80002fc <EXTI15_10_IRQHandler+0x48>
				EXTI_line_callbacks[i]();
 80002de:	4a0e      	ldr	r2, [pc, #56]	; (8000318 <EXTI15_10_IRQHandler+0x64>)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80002e6:	4798      	blx	r3
				EXTI->PR |= (1<<(i));
 80002e8:	4b0a      	ldr	r3, [pc, #40]	; (8000314 <EXTI15_10_IRQHandler+0x60>)
 80002ea:	695b      	ldr	r3, [r3, #20]
 80002ec:	2101      	movs	r1, #1
 80002ee:	687a      	ldr	r2, [r7, #4]
 80002f0:	fa01 f202 	lsl.w	r2, r1, r2
 80002f4:	4611      	mov	r1, r2
 80002f6:	4a07      	ldr	r2, [pc, #28]	; (8000314 <EXTI15_10_IRQHandler+0x60>)
 80002f8:	430b      	orrs	r3, r1
 80002fa:	6153      	str	r3, [r2, #20]
	for(int i=10;i<16;i++){
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	3301      	adds	r3, #1
 8000300:	607b      	str	r3, [r7, #4]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	2b0f      	cmp	r3, #15
 8000306:	dddb      	ble.n	80002c0 <EXTI15_10_IRQHandler+0xc>
			}
		}
	}
}
 8000308:	bf00      	nop
 800030a:	bf00      	nop
 800030c:	3708      	adds	r7, #8
 800030e:	46bd      	mov	sp, r7
 8000310:	bd80      	pop	{r7, pc}
 8000312:	bf00      	nop
 8000314:	40010400 	.word	0x40010400
 8000318:	2000001c 	.word	0x2000001c

0800031c <main>:

#include <stdint.h>
#include "EXTI_interface.h"

int main(void)
{
 800031c:	b480      	push	{r7}
 800031e:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 8000320:	e7fe      	b.n	8000320 <main+0x4>
	...

08000324 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000324:	480d      	ldr	r0, [pc, #52]	; (800035c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000326:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000328:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800032c:	480c      	ldr	r0, [pc, #48]	; (8000360 <LoopForever+0x6>)
  ldr r1, =_edata
 800032e:	490d      	ldr	r1, [pc, #52]	; (8000364 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000330:	4a0d      	ldr	r2, [pc, #52]	; (8000368 <LoopForever+0xe>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000334:	e002      	b.n	800033c <LoopCopyDataInit>

08000336 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000336:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000338:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800033a:	3304      	adds	r3, #4

0800033c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800033c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800033e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000340:	d3f9      	bcc.n	8000336 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000342:	4a0a      	ldr	r2, [pc, #40]	; (800036c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000344:	4c0a      	ldr	r4, [pc, #40]	; (8000370 <LoopForever+0x16>)
  movs r3, #0
 8000346:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000348:	e001      	b.n	800034e <LoopFillZerobss>

0800034a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800034a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800034c:	3204      	adds	r2, #4

0800034e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800034e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000350:	d3fb      	bcc.n	800034a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000352:	f000 f811 	bl	8000378 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000356:	f7ff ffe1 	bl	800031c <main>

0800035a <LoopForever>:

LoopForever:
  b LoopForever
 800035a:	e7fe      	b.n	800035a <LoopForever>
  ldr   r0, =_estack
 800035c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000360:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000364:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000368:	080003e0 	.word	0x080003e0
  ldr r2, =_sbss
 800036c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000370:	20000068 	.word	0x20000068

08000374 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000374:	e7fe      	b.n	8000374 <ADC1_2_IRQHandler>
	...

08000378 <__libc_init_array>:
 8000378:	b570      	push	{r4, r5, r6, lr}
 800037a:	2600      	movs	r6, #0
 800037c:	4d0c      	ldr	r5, [pc, #48]	; (80003b0 <__libc_init_array+0x38>)
 800037e:	4c0d      	ldr	r4, [pc, #52]	; (80003b4 <__libc_init_array+0x3c>)
 8000380:	1b64      	subs	r4, r4, r5
 8000382:	10a4      	asrs	r4, r4, #2
 8000384:	42a6      	cmp	r6, r4
 8000386:	d109      	bne.n	800039c <__libc_init_array+0x24>
 8000388:	f000 f81a 	bl	80003c0 <_init>
 800038c:	2600      	movs	r6, #0
 800038e:	4d0a      	ldr	r5, [pc, #40]	; (80003b8 <__libc_init_array+0x40>)
 8000390:	4c0a      	ldr	r4, [pc, #40]	; (80003bc <__libc_init_array+0x44>)
 8000392:	1b64      	subs	r4, r4, r5
 8000394:	10a4      	asrs	r4, r4, #2
 8000396:	42a6      	cmp	r6, r4
 8000398:	d105      	bne.n	80003a6 <__libc_init_array+0x2e>
 800039a:	bd70      	pop	{r4, r5, r6, pc}
 800039c:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a0:	4798      	blx	r3
 80003a2:	3601      	adds	r6, #1
 80003a4:	e7ee      	b.n	8000384 <__libc_init_array+0xc>
 80003a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003aa:	4798      	blx	r3
 80003ac:	3601      	adds	r6, #1
 80003ae:	e7f2      	b.n	8000396 <__libc_init_array+0x1e>
 80003b0:	080003d8 	.word	0x080003d8
 80003b4:	080003d8 	.word	0x080003d8
 80003b8:	080003d8 	.word	0x080003d8
 80003bc:	080003dc 	.word	0x080003dc

080003c0 <_init>:
 80003c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c2:	bf00      	nop
 80003c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003c6:	bc08      	pop	{r3}
 80003c8:	469e      	mov	lr, r3
 80003ca:	4770      	bx	lr

080003cc <_fini>:
 80003cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ce:	bf00      	nop
 80003d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003d2:	bc08      	pop	{r3}
 80003d4:	469e      	mov	lr, r3
 80003d6:	4770      	bx	lr
